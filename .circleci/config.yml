# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

---
version: 2.1

jobs:
  deploy:
    docker:
      - image: cimg/python:3.11.3-node
    steps:
      - checkout
      - run:
          name: "Install gcloud"
          command: |-
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \
            && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - \
            && sudo apt-get update -y \
            && sudo apt-get install google-cloud-cli -y
      - run:
          name: "Create Airflow Core Python Wheel"
          command: ./scripts/ci/astronomer-release.sh
      - run:
          name: "Deploy Python Wheel and tar.gz"
          command: |-
            echo $GOOGLE_APPLICATION_CREDENTIALS_CONTENT > gcloud.json
            gcloud auth activate-service-account --key-file=gcloud.json
            gsutil cp -a public-read -r ./dist/* gs://pip.astronomer.io/v2
      - run:
          name: "Deploy '.build' file (containing deployed version number)"
          command: |-
            echo $GOOGLE_APPLICATION_CREDENTIALS_CONTENT > gcloud.json
            gcloud auth activate-service-account --key-file=gcloud.json
            gsutil cp -a public-read -r "./apache-airflow/*.build" gs://pip.astronomer.io/v2/apache-airflow/
            gsutil cp -a public-read -r "./apache-airflow-core/*.build" gs://pip.astronomer.io/v2/apache-airflow-core/
      - run:
          name: "Index Pages"
          command: |-
            git clone https://github.com/astronomer/pip-release-utilities.git pip-release-utilities
            ./pip-release-utilities/build-index-page.sh pip.astronomer.io v2/apache-airflow-core
            ./pip-release-utilities/build-index-page.sh pip.astronomer.io v2/apache-airflow

  static-check:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Set up Python with pyenv"
          command: |
            pyenv install 3.11
            pyenv global 3.11
      - run:
          name: "Pull docker image"
          command: |
            docker pull ghcr.io/apache/airflow/v3-0-test/ci/python3.9
      - run:
          name: "Install pipx"
          command: |
            pip3 install pipx uv pre-commit
            pipx ensurepath
      - run:
          name: "Install breeze package"
          command: |
            uv tool install -e ./dev/breeze
      - run:
          name: "Run pre-commit Checks"
          no_output_timeout: 60m
          command: |
            mkdir files
            mkdir dist
            uv tool install prek
            prek install -f
            prek --only-my-changes

  compare-commit-hash:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: "Check if tag commit hash matches branch commit hash"
          command: |
            BRANCH_COMMIT_HASH=$(git rev-parse HEAD 2>/dev/null)
            if [ -z "$CIRCLE_TAG" ]; then
              echo "Not a tag build"
              exit 0
            fi
            TAG_COMMIT_HASH=$(git rev-list -n 1 "tags/$CIRCLE_TAG" 2>/dev/null)
            if [ -z "$TAG_COMMIT_HASH" ]; then
              echo "Tag $CIRCLE_TAG not found"
            else
              if [ "$TAG_COMMIT_HASH" != "$BRANCH_COMMIT_HASH" ]; then
                echo "Tag commit hash does not match branch commit hash"
                exit 1
              fi
            fi


workflows:
  Build and publish wheel:
    jobs:
      - static-check:
         filters:
          tags:
            only: '/^v[0-9]+\.[0-9]+\.[0-9]+\+astro\.\d+$/'
      - compare-commit-hash:
          filters:
            tags:
              only: '/^v[0-9]+\.[0-9]+\.[0-9]+\+astro\.\d+$/'
            branches:
              only: '/^v[0-9]+-[0-9]+-[0-9]|main-dev$/'
          requires:
            - static-check
      - deploy:
          filters:
            tags:
              only: '/^v[0-9]+\.[0-9]+\.[0-9]+\+astro\.\d+$/'
            branches:
              only: '/^v[0-9]+-[0-9]+-[0-9]|main-dev$/'
          context:
            - Pip Deploy
          requires:
            - compare-commit-hash
