# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
dist: bionic
language: python
env:
  global:
    - BUILD_ID=${TRAVIS_BUILD_ID}
    - MOUNT_LOCAL_SOURCES="false"
    - AIRFLOW_MOUNT_HOST_VOLUMES_FOR_STATIC_CHECKS="true"
    - FORCE_ANSWER_TO_QUESTIONS="yes"
    - AIRFLOW_CI_SILENT="true"
    - CI="true"
python: "3.6"
stages:
  - pre-test
  - test
  - name: deploy
    if: |
      repo = astronomer/airflow AND \
      (( branch =~ ^v\d+[\d-]+) OR (tag IS present AND tag =~ ^v\d+[\d.]+.*\+astro ))
jobs:
  include:
    - name: "Static checks"
      stage: pre-test
      script: ./scripts/ci/ci_run_all_static_tests.sh
      env: >-
        AIRFLOW_MOUNT_SOURCE_DIR_FOR_STATIC_CHECKS="true"
        PYTHON_VERSION=3.6
    - name: "Tests [Postgres9.6][Py3.6][integrations]"
      env: >-
        BACKEND=postgres
        ENV=docker
        PYTHON_VERSION=3.6
        POSTGRES_VERSION=9.6
      stage: test
    - name: "Tests [Postgres10][Py3.6]"
      env: >-
        BACKEND=postgres
        ENV=docker
        PYTHON_VERSION=3.6
        POSTGRES_VERSION=10
      stage: test
    - name: "Tests [Postgres12.2][Py3.6]"
      env: >-
        BACKEND=postgres
        ENV=docker
        PYTHON_VERSION=3.6
        POSTGRES_VERSION=12.2
      stage: test
    - name: "Tests [Sqlite][Py3.5]"
      env: >-
        BACKEND=sqlite
        ENV=docker
        PYTHON_VERSION=3.5
      stage: test
    - name: "Tests [Postgres9.6][Kubernetes][Py3.6][persistent]"
      env: >-
        BACKEND=postgres
        ENV=kubernetes
        START_KUBERNETES_CLUSTER=true
        KUBERNETES_VERSION=v1.15.3
        KUBERNETES_MODE=persistent_mode
        PYTHON_VERSION=3.6
      stage: test
      script: travis_wait 30 "./scripts/ci/ci_run_airflow_testing.sh"
    - name: "Tests [Postgres9.6][Kubernetes][Py3.6][git]"
      env: >-
        BACKEND=postgres
        ENV=kubernetes
        KUBERNETES_VERSION=v1.15.3
        KUBERNETES_MODE=git_mode
        PYTHON_VERSION=3.6
      stage: test
      script: travis_wait 30 "./scripts/ci/ci_run_airflow_testing.sh"

    - stage: deploy
      name: Publish wheels
      before_install: skip
      install: skip
      script: skip
      before_deploy:
        - |-
          if [[ ! -d "pip-release-utilities" ]]; then
            git clone https://github.com/astronomer/pip-release-utilities.git
            "./scripts/ci/astronomer-release.sh"
            openssl aes-256-cbc \
              -K $encrypted_e97c699094fd_key \
              -iv $encrypted_e97c699094fd_iv \
              -in astronomer-prod-fec60ad8e5e2.json.enc \
              -out astronomer-prod-fec60ad8e5e2.json -d
          fi
      deploy:
        - provider: gcs
          edge: true
          bucket: "pip.astronomer.io"
          acl: public-read
          local_dir: ./dist
          upload_dir: simple
          key_file: astronomer-prod-fec60ad8e5e2.json
          on:
            all_branches: true
        - provider: gcs
          edge: true
          bucket: "pip.astronomer.io"
          acl: public-read
          local_dir: ./
          upload_dir: simple
          key_file: astronomer-prod-fec60ad8e5e2.json
          glob: "**/*.build"
          cache_control: max-age=0
          on:
            all_branches: true
      after_deploy:
        - "./pip-release-utilities/build-index-page.sh pip.astronomer.io simple/apache-airflow"
        - "./pip-release-utilities/build-index-page.sh pip.astronomer.io simple/astronomer-certified"
  services:
    - docker
before_install:
  - ./scripts/ci/ci_before_install.sh
script: "./scripts/ci/ci_run_airflow_testing.sh"
